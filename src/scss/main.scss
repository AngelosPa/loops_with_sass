// // @import "../../node_modules/bootstrap/scss/bootstrap.scss";

$items-count: 20; // corresponds to the number of divs in your HTML

// // Define animation
// @keyframes move {
//   0% {
//     transform: scaleY(1);
//   }

//   100% {
//     transform: scaleY(1.4);
//   }
// }

// // Mixin to use animation
// @mixin add-move-animation($duration) {
//   animation-name: move;
//   animation-duration: $duration;
//   animation-iteration-count: infinite;
//   animation-direction: alternate;
//   animation-timing-function: linear;
// }

body {
  background-color: black;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
}

@for $i from 1 through $items-count {
  .item:nth-child(#{$i}) {
    background: white;
    clip-path: polygon(
      49% 0%,
      58% 43%,
      100% 35%,
      63% 52%,
      80% 90%,
      52% 57%,
      20% 90%,
      43% 53%,
      0% 35%,
      47% 41%
    );
    width: 3rem;
    height: 3rem;
    position: absolute;
    left: 5 + 0.5 * $i * $i + rem;
    top: 1 + $i * 4 + rem;
  }
}
// random() will return a number between 1-100 with no argument being passed to it, or when you pass in a single integer parameter to define the upper limit. random(20) will return a number between 1-20.

.items-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 30vh;
  width: 30vw;
  position: relative;
  background-color: red;
}

// // For loop to randomize values for each div bar
// @for $i from 1 through $items-count {
//   .item:nth-child(#{$i}) {
//     background: linear-gradient(
//       to bottom right,
//       lighten(orange, random(40)),
//       rgba(darken(orange, random(10)), 1)
//     );
//     // random() will return a number between 1-100 with no argument being passed to it, or when you pass in a single integer parameter to define the upper limit. random(20) will return a number between 1-20.
//     height: random(60) + 10 + vh;
//     border-radius: 0 0 ((random(50) + 10 + px)) ((random(50) + 10 + px));
//     transform-origin: 0 0;

//     @if (($i % 2) != 0) {
//       border-radius: ((random(50) + 10 + px)) ((random(20) + 10 + px)) 0 0;
//       background: linear-gradient(
//         to top right,
//         lighten(gray, random(40)),
//         rgba(darken(gray, random(10)), 1)
//       );
//     }
//     // The lighten() function increases lightness by a fixed amount.
//     // The darken() function decreases lightness by a fixed amount.
//     @include add-move-animation(random(5) + 1 + s);
//   }
// }

// .item:nth-child(odd) {
//   align-self: end;
//   transform-origin: 0 100%;
// }
