// //thats for bootstrap i keep it here  @import "../../node_modules/bootstrap/scss/bootstrap.scss";

$stars-count: 36; // corresponds to the number of divs in your HTML

// Define animation
@keyframes move {
  0% {
    transform: rotate(00deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

// Mixin to use animation
@mixin add-move-animation($duration) {
  animation-name: move;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-direction: normal;
  animation-timing-function: ease-in-out;
}
@mixin lightanime($duration) {
  animation-name: light;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-direction: normal;
  animation-timing-function: ease-in-out;
}
@keyframes light {
  0% {
    box-shadow: 0 0 6px 2px rgb(73, 3, 3),
      -4px -0px 20px -1px rgba(105, 7, 7, 0.431);
  }
  50% {
    box-shadow: 0 0 6px 2px rgb(73, 3, 3),
      -4px -0px 20px -1px rgba(105, 7, 7, 0.431);
    box-shadow: 0 0 60px 2px rgb(151, 7, 7),
      -4px -0px 20px -1px rgba(255, 231, 124, 0.431);

    transform: scale(1.1);
  }

  100% {
    box-shadow: 0 0 60px 2px rgb(255, 255, 255),
      -4px -0px 20px -1px rgba(255, 231, 124, 0.431);

    transform: scale(0.1);
  }
}

// Mixin to make the stars
@mixin sterne {
  background: linear-gradient(0.15turn, #10a6c081, #1755ffb0, #ffffff);
  position: absolute;
  border-radius: ((random(50) + 100 + px)) ((random(20) + 100 + px)) 0 0;
  border-radius: 50%;

  box-shadow: 0 0 6px 2px rgb(16, 2, 98),
    -4px -0px 20px -1px rgba(255, 255, 255, 0.431);
}

body {
  background-color: black;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  @include add-move-animation(11 + 3s);
}

@for $i from 1 through 5 {
  .star:nth-child(#{$i}) {
    @include add-move-animation(6s);
    @include sterne();

    width: 1.5rem;
    height: 1.5rem;

    left: 5 + $i * $i + rem;
    top: 1 + $i * 4 + rem;
  }
}
@for $i from 5 through 10 {
  .star:nth-child(#{$i}) {
    @include add-move-animation(6s);
    @include sterne();
    width: 1.9rem;
    height: 1.8rem;

    left: 14 + ($i * $i)/2 + rem;
    top: 14 + $i + rem;
  }
}
@for $i from 10 through 18 {
  .star:nth-child(#{$i}) {
    @include add-move-animation(6s);
    @include sterne();
    width: 1.2rem;
    height: 1.2rem;

    left: -17 + ($i * $i)/5 + rem;
    top: -32 + $i * 4 + rem;
  }
}
// random() will return a number between 1-100 with no argument being passed to it, or when you pass in a single integer parameter to define the upper limit. random(20) will return a number between 1-20.

.stars-container {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 100%;
  height: 3rem;
  width: 3rem;
  position: relative;
  background: linear-gradient(
    to left,
    rgba(255, 255, 255, 0.8),
    #003366,
    #000d1a,
    #000d1a,
    #000d1a,
    #000000c2
  );
  @include add-move-animation(6s);
}
.stars-container2 {
  display: flex;
  border-radius: 100%;
  justify-content: center;
  align-items: center;
  height: 1rem;
  width: 1rem;
  margin-left: 3rem;
  position: relative;
  background: linear-gradient(#806b0e, #f3f3e3);
  box-shadow: 0px 0px 15px 1px rgba(243, 245, 148, 0.637);
  @include add-move-animation(6+3s);
  @include lightanime(6s);
}
// For loop to randomize values for each div bar
// @for $i from 1 through $stars-count {
//   .star:nth-child(#{$i}) {
//     @if ($i % 2 + random(20) !=0) {
//       @include lightanime(3s);
//     }
//   }
// }
